<?phpclass UserRegistration extends dbcon {    /**     * Admin Login DAO Constructor     */    public function __construct() {        parent::__construct();    }    public function checkRequiredFields($name, $email, $password, $phone_number, $default_airport, $default_airspeed) {        if ($name == "") {            $objResult->result = false;            $objResult->message = "Name is empty!!";            return $objResult;        } elseif (strlen($name) > 128) {            $objResult->result = false;            $objResult->message = "Name can be maximum of 128 characters!!";            return $objResult;        } elseif ($email == "") {            $objResult->result = false;            $objResult->message = "Eamil is empty!!";            return $objResult;        } elseif (strlen($email) > 64) {            $objResult->result = false;            $objResult->message = "Email can be maximum of 64 characters!!";            return $objResult;        } /* 			//removed as per new requirements			elseif ($username == "") {            $objResult->result = false;            $objResult->message = "Username is empty!!";            return $objResult;        } elseif (strlen($username) > 16) {            $objResult->result = false;            $objResult->message = "Username can be maximum of 16 characters!!";            return $objResult;        } */elseif ($password == "") {            $objResult->result = false;            $objResult->message = "Password is empty!!";            return $objResult;        } elseif (strlen($password) > 32) {            $objResult->result = false;            $objResult->message = "Password can be maximum of 32 characters!!";            return $objResult;        } elseif ($phone_number == "") {            $objResult->result = false;            $objResult->message = "Phone no is empty!!";            return $objResult;        } elseif (strlen($phone_number) > 16) {            $objResult->result = false;            $objResult->message = "Phone no can be maximum of 16 characters!!";            return $objResult;        } elseif ($default_airport == "") {            $objResult->result = false;            $objResult->message = "Default Ariport is empty!!";            return $objResult;        } elseif (strlen($default_airport) > 32) {            $objResult->result = false;            $objResult->message = "Default Ariport can be maximum of 32 characters!!";            return $objResult;        } elseif ($default_airspeed == "") {            $objResult->result = false;            $objResult->message = "Default Airspeed is empty!!";            return $objResult;        } elseif (strlen($default_airspeed) > 32) {            $objResult->result = false;            $objResult->message = "Default Airspeed can be maximum of 32 characters!!";            return $objResult;        }        $objResult->result = true;        return $objResult;    }    /**     * To check the availability of username     * @param MemberUser $objUser     * @return type      */    public function checkUserName($username) {        try {            $sql = "select * from " . DBPREFIX . "fgusers where username='" . $username . "'";            $this->Query($sql);            if ($this->NumRow() > 0) {                $objResult->result = false;                $objResult->message = "User name already exists!!";            } else {                $objResult->result = true;            }            return $objResult;        } catch (Exception $e) {            //Logger Info            return "Error in checkUserName - " . $e->getMessage();        }    }    /**     * To check the availability of email     * @param MemberUser $objUser     * @return type      */    public function checkEmail($email) {        try {            $sql = "select * from " . DBPREFIX . "fgusers where email='" . $email . "'";            $this->Query($sql);            if ($this->NumRow() > 0) {                $objResult->result = false;                $objResult->message = "Email already exists!!";            } else {                $objResult->result = true;            }            return $objResult;        } catch (Exception $e) {            //Logger Info            return "Error in checkEmail - " . $e->getMessage();        }    }    public function sendRegistrationMail($email, $name, $password) {        $msg = 'Dear ' . $name . ',<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';        $msg.='Thank you for registering at <b>' . $_SERVER["SERVER_NAME"] . '</b>.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';        $msg.=' Your email is <b>' . $email . '</b> and password is <b>' . $password . '</b>.<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';        $msg.='With Best Regards,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';        $msg.='GolfPilot Team.';        SendMail($email, "GolfPilot Registration mail.", $msg);    }}?>